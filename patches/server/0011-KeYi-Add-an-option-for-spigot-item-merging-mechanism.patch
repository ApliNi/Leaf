From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: nostalgic853 <yuu8583@proton.me>
Date: Sun, 23 Oct 2022 23:21:45 +0800
Subject: [PATCH] KeYi: Add an option for spigot item merging mechanism

Original license: MIT
Original project: https://github.com/KeYiMC/KeYi

diff --git a/src/main/java/net/minecraft/world/entity/item/ItemEntity.java b/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
index b77d112f74046cd35f17bada00a22402cb716482..881fe946c1046dd0421db98f628fcf6f0922e469 100644
--- a/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
+++ b/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
@@ -38,6 +38,7 @@ import org.bukkit.event.entity.EntityPickupItemEvent;
 import org.bukkit.event.player.PlayerPickupItemEvent;
 // CraftBukkit end
 import org.bukkit.event.player.PlayerAttemptPickupItemEvent; // Paper
+import org.dreeam.leaf.LeafConfig;
 
 public class ItemEntity extends Entity implements TraceableEntity {
 
@@ -325,7 +326,7 @@ public class ItemEntity extends Entity implements TraceableEntity {
         ItemStack itemstack1 = other.getItem();
 
         if (Objects.equals(this.target, other.target) && ItemEntity.areMergable(itemstack, itemstack1)) {
-            if (true || itemstack1.getCount() < itemstack.getCount()) { // Spigot
+            if (LeafConfig.useSpigotItemMergingMechanism || itemstack1.getCount() < itemstack.getCount()) { // Spigot // KeYi
                 ItemEntity.merge(this, itemstack, other, itemstack1);
             } else {
                 ItemEntity.merge(other, itemstack1, this, itemstack);
diff --git a/src/main/java/org/dreeam/leaf/LeafConfig.java b/src/main/java/org/dreeam/leaf/LeafConfig.java
index 08d1d4ffd145a63dae019ea2111cb5af3b05228e..56b9d73a284a5925cf962fe16bcc2255aacba45b 100644
--- a/src/main/java/org/dreeam/leaf/LeafConfig.java
+++ b/src/main/java/org/dreeam/leaf/LeafConfig.java
@@ -176,7 +176,9 @@ public class LeafConfig {
         maxUseItemDistance = getDouble("max-UseItem-distance", maxUseItemDistance, "The max distance of UseItem for players");
     }
 
+    public static boolean useSpigotItemMergingMechanism = true;
     private static void performance() {
+        useSpigotItemMergingMechanism = getBoolean("performance.use-spigot-item-merging-mechanism", useSpigotItemMergingMechanism);
     }
 
     private static void network() {
