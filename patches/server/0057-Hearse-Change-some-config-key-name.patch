From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: wangxyper <wangxyper@163.com>
Date: Tue, 10 Jan 2023 18:52:00 +0800
Subject: [PATCH] Hearse: Change some config key name

Original license: MIT
Original project: https://github.com/NaturalCodeClub/HearseRewrite

diff --git a/src/main/java/co/earthme/hearse/server/ServerEntityTickHook.java b/src/main/java/co/earthme/hearse/server/ServerEntityTickHook.java
index 8605d867bea87095dcf43e1c1ebedbb9180c4480..cf7ee6fda90fa0f6827dc2d1c584151e3b99fb38 100644
--- a/src/main/java/co/earthme/hearse/server/ServerEntityTickHook.java
+++ b/src/main/java/co/earthme/hearse/server/ServerEntityTickHook.java
@@ -36,8 +36,8 @@ public class ServerEntityTickHook {
     }
 
     public static void init(){
-        boolean asyncEntityEnabled1 = HearseConfig.getBoolean("enable-async-entity",true);
-        final int workerCount = HearseConfig.getInt("async-entity-worker-count",Runtime.getRuntime().availableProcessors());
+        boolean asyncEntityEnabled1 = HearseConfig.getBoolean("optimizations.enable-async-entity",true);
+        final int workerCount = HearseConfig.getInt("workers.async-entity-worker-count",Runtime.getRuntime().availableProcessors());
         if (asyncEntityEnabled1){
             worker = new WorkerThreadPoolExecutor(
                     workerCount,
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 68523cb53573baa8ca98177f40acac3745cd625a..ac92d1b36590bcc491d56a1eb442477c8f6e2d11 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -1126,13 +1126,10 @@ public class ServerLevel extends Level implements WorldGenLevel {
         } else { entity.inactiveTick(); } // Paper - EAR 2
         //this.getProfiler().pop(); // Purpur
         //} finally { timer.stopTiming(); } // Paper - timings // Purpur
-        Iterator iterator = entity.getPassengers().iterator();
 
-        while (iterator.hasNext()) {
-            Entity entity1 = (Entity) iterator.next();
-
-            this.tickPassenger(entity, entity1);
-        }
+            for (Entity entity1 : entity.getPassengers()) {
+                this.tickPassenger(entity, entity1);
+            }
         // } finally { timer.stopTiming(); } // Paper - timings - move up
         // Paper start - log detailed entity tick information
         } finally {
@@ -1171,11 +1168,8 @@ public class ServerLevel extends Level implements WorldGenLevel {
                 }
                 // Paper end - EAR 2
                 //gameprofilerfiller.pop(); // Purpur
-                Iterator iterator = passenger.getPassengers().iterator();
-
-                while (iterator.hasNext()) {
-                    Entity entity2 = (Entity) iterator.next();
 
+                for (Entity entity2 : passenger.getPassengers()) {
                     this.tickPassenger(passenger, entity2);
                 }
 
diff --git a/src/main/java/net/minecraft/world/level/entity/EntityTickList.java b/src/main/java/net/minecraft/world/level/entity/EntityTickList.java
index dca7c7f83043452b5fef3c1d24a99f08dfaf242a..2a14b665437336aa32ca14fb2137d5bb400e2e42 100644
--- a/src/main/java/net/minecraft/world/level/entity/EntityTickList.java
+++ b/src/main/java/net/minecraft/world/level/entity/EntityTickList.java
@@ -1,28 +1,25 @@
 package net.minecraft.world.level.entity;
 
-import java.util.*;
-import java.util.function.Consumer;
-
 import com.google.common.collect.Lists;
-import it.unimi.dsi.fastutil.objects.ObjectArraySet;
-import it.unimi.dsi.fastutil.objects.ObjectSets;
 import net.minecraft.world.entity.Entity;
+import java.util.List;
+import java.util.function.Consumer;
 
 public class EntityTickList {
     public final List<Entity> entities = Lists.newCopyOnWriteArrayList();
 
     public void add(Entity entity) {
         io.papermc.paper.util.TickThread.ensureTickThread("Asynchronous entity ticklist addition"); // Paper
-        this.entities.add(entity); // Paper - replace with better logic, do not delay removals/additions
+        this.entities.add(entity);
     }
 
     public void remove(Entity entity) {
         io.papermc.paper.util.TickThread.ensureTickThread("Asynchronous entity ticklist removal"); // Paper
-        this.entities.remove(entity); // Paper - replace with better logic, do not delay removals/additions
+        this.entities.remove(entity);
     }
 
     public boolean contains(Entity entity) {
-        return this.entities.contains(entity); // Paper - replace with better logic, do not delay removals/additions
+        return this.entities.contains(entity);
     }
 
     public void forEach(Consumer<Entity> action) {
@@ -30,6 +27,5 @@ public class EntityTickList {
         for (Entity entity : this.entities) {
             action.accept(entity);
         }
-        // Paper end - replace with better logic, do not delay removals/additions
     }
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 96cde1f86ca073e7e9e5799bcb12a10adf9230b2..c0ce5a75923e9482d3bd76fbcf730e6c6cd1bbda 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -1,5 +1,6 @@
 package org.bukkit.craftbukkit;
 
+import co.earthme.hearse.HearseConfig;
 import com.google.common.base.Charsets;
 import com.google.common.base.Function;
 import com.google.common.base.Preconditions;
