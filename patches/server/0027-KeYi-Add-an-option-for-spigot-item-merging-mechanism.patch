From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: nostalgic853 <yuu8583@proton.me>
Date: Sun, 23 Oct 2022 23:21:45 +0800
Subject: [PATCH] KeYi: Add an option for spigot item merging mechanism

Original license: MIT
Original project: https://github.com/KeYiMC/KeYi

diff --git a/src/main/java/net/minecraft/world/entity/item/ItemEntity.java b/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
index 7b0374b6e22105e59b29995983a6ac50268c722e..da45ccd3b96158dace1dec4c291aa98f9d5c4ac5 100644
--- a/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
+++ b/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
@@ -37,6 +37,7 @@ import org.bukkit.event.entity.EntityPickupItemEvent;
 import org.bukkit.event.player.PlayerPickupItemEvent;
 // CraftBukkit end
 import org.bukkit.event.player.PlayerAttemptPickupItemEvent; // Paper
+import org.dreeam.leaf.LeafConfig;
 
 public class ItemEntity extends Entity {
 
@@ -316,7 +317,7 @@ public class ItemEntity extends Entity {
         ItemStack itemstack1 = other.getItem();
 
         if (Objects.equals(this.getOwner(), other.getOwner()) && ItemEntity.areMergable(itemstack, itemstack1)) {
-            if (true || itemstack1.getCount() < itemstack.getCount()) { // Spigot
+            if (LeafConfig.useSpigotItemMergingMechanism || itemstack1.getCount() < itemstack.getCount()) { // Spigot // KeYi
                 ItemEntity.merge(this, itemstack, other, itemstack1);
             } else {
                 ItemEntity.merge(other, itemstack1, this, itemstack);
diff --git a/src/main/java/org/dreeam/leaf/LeafConfig.java b/src/main/java/org/dreeam/leaf/LeafConfig.java
index e0d5e00b4291e66b27a3a0c1701af3c4e7b3db26..aec438c9f551b3d93cc18fa61fe55296fc16b0d7 100644
--- a/src/main/java/org/dreeam/leaf/LeafConfig.java
+++ b/src/main/java/org/dreeam/leaf/LeafConfig.java
@@ -273,4 +273,9 @@ public class LeafConfig {
     private static void networkSettings() {
         kickForOutOfOrderChat = getBoolean("settings.network.kick-for-out-of-order-chat", kickForOutOfOrderChat);
     }
+
+    public static boolean useSpigotItemMergingMechanism = true;
+    private static void performance() {
+        useSpigotItemMergingMechanism = getBoolean("performance.use-spigot-item-merging-mechanism", useSpigotItemMergingMechanism);
+    }
 }
