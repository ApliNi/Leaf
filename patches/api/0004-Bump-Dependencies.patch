From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dreeam <61569423+Dreeam-qwq@users.noreply.github.com>
Date: Fri, 28 Oct 2022 17:24:16 -0400
Subject: [PATCH] Bump Dependencies


diff --git a/build.gradle.kts b/build.gradle.kts
index 58bae199b8fcdfcc40a159748e723d7d163515a5..19c0c18ccbbf8e547ba8ce0e54b851fd725f4164 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -9,8 +9,8 @@ java {
 }
 
 val adventureVersion = "4.14.0"
-val slf4jVersion = "1.8.0-beta4"
-val log4jVersion = "2.17.1"
+val slf4jVersion = "2.0.7" // Leaf - Bump Dependencies
+val log4jVersion = "2.20.0" // Leaf - Bump Dependencies
 val apiAndDocs: Configuration by configurations.creating {
     attributes {
         attribute(Category.CATEGORY_ATTRIBUTE, objects.named(Category.DOCUMENTATION))
@@ -27,16 +27,16 @@ val annotationsVersion = "24.0.1"
 
 dependencies {
     // api dependencies are listed transitively to API consumers
-    api("com.google.guava:guava:31.1-jre")
-    api("com.google.code.gson:gson:2.10")
-    api("net.md-5:bungeecord-chat:1.16-R0.4-deprecated+build.9") // Paper
+    api("com.google.guava:guava:32.1.1-jre") // Leaf - Bump Dependencies
+    api("com.google.code.gson:gson:2.10.1")
+    api("net.md-5:bungeecord-chat:1.20-R0.1-SNAPSHOT") // Paper // Leaf - Bump Dependencies
     api("org.yaml:snakeyaml:2.0")
     api("org.joml:joml:1.10.5")
     // Paper start
     api("com.googlecode.json-simple:json-simple:1.1.1") {
         isTransitive = false // includes junit
     }
-    api("it.unimi.dsi:fastutil:8.5.6")
+    api("it.unimi.dsi:fastutil:8.5.12") // Leaf - Bump Dependencies
     apiAndDocs(platform("net.kyori:adventure-bom:$adventureVersion"))
     apiAndDocs("net.kyori:adventure-api")
     apiAndDocs("net.kyori:adventure-text-minimessage")
@@ -48,30 +48,33 @@ dependencies {
     api("org.slf4j:slf4j-api:$slf4jVersion")
     api("io.sentry:sentry:6.23.0") // Pufferfish
 
-    implementation("org.ow2.asm:asm:9.4")
-    implementation("org.ow2.asm:asm-commons:9.4")
+    // Leaf start - Bump Dependencies
+    implementation("org.ow2.asm:asm:9.5")
+    implementation("org.ow2.asm:asm-commons:9.5")
     // Paper end
 
-    api("org.apache.maven:maven-resolver-provider:3.8.5")
-    compileOnly("org.apache.maven.resolver:maven-resolver-connector-basic:1.7.3")
-    compileOnly("org.apache.maven.resolver:maven-resolver-transport-http:1.7.3")
-    compileOnly("com.google.code.findbugs:jsr305:1.3.9") // Paper
+    api("org.apache.maven:maven-resolver-provider:3.9.3")
+    compileOnly("org.apache.maven.resolver:maven-resolver-connector-basic:1.9.13")
+    compileOnly("org.apache.maven.resolver:maven-resolver-transport-http:1.9.13")
+    compileOnly("com.google.code.findbugs:jsr305:3.0.2") // Paper
 
     val annotations = "org.jetbrains:annotations:$annotationsVersion" // Paper - we don't want Java 5 annotations...
     compileOnly(annotations)
     testCompileOnly(annotations)
 
     // Paper start - add checker
-    val checkerQual = "org.checkerframework:checker-qual:3.21.0"
+    val checkerQual = "org.checkerframework:checker-qual:3.36.0"
     compileOnlyApi(checkerQual)
     testCompileOnly(checkerQual)
     // Paper end
-    testImplementation("org.mockito:mockito-core:4.9.0") // Paper - add mockito
+    testImplementation("org.mockito:mockito-core:5.4.0") // Paper - add mockito
 
     testImplementation("org.apache.commons:commons-lang3:3.12.0")
     testImplementation("junit:junit:4.13.2")
-    testImplementation("org.hamcrest:hamcrest-library:1.3")
+
+    testImplementation("org.hamcrest:hamcrest:2.2")
     testImplementation("org.ow2.asm:asm-tree:9.5")
+    // Leaf end
 }
 
 configure<PublishingExtension> {
@@ -117,7 +120,7 @@ tasks.withType<Javadoc> {
     options.use()
     options.isDocFilesSubDirs = true
     options.links(
-        "https://guava.dev/releases/31.1-jre/api/docs/",
+        "https://guava.dev/releases/32.1.1-jre/api/docs/", // Leaf - Bump Dependencies
         "https://javadoc.io/doc/org.yaml/snakeyaml/2.0/",
         "https://javadoc.io/doc/org.jetbrains/annotations/$annotationsVersion/", // Paper - we don't want Java 5 annotations
         // Paper start
@@ -163,6 +166,9 @@ val scanJar = tasks.register("scanJarForBadCalls", io.papermc.paperweight.tasks.
     jarToScan.set(tasks.jar.flatMap { it.archiveFile })
     classpath.from(configurations.compileClasspath)
 }
+repositories {
+    mavenCentral()
+}
 tasks.check {
     dependsOn(scanJar)
 }
